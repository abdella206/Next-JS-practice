{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/code/post_class_work/bitzprice_nextjs/components/Prices.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Prices =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Prices, _React$Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      currency: 'GBP'\n    });\n\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"render\",\n    value: function render() {\n      var list = '';\n\n      if (this.state.currency === 'USD') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.USD.description, \" :\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, this.props.bpi[this.state.currency].code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, this.props.bpi[this.state.currency].rate));\n      } else if (this.state.currency === 'GBP') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.GBP.description, \" :\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, this.props.bpi[this.state.currency].code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, this.props.bpi[this.state.currency].rate));\n      } else if (this.state.currency === 'EUR') {\n        list = __jsx(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Bitcoin rate for \", this.props.bpi.EUR.description, \" :\", __jsx(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, this.props.bpi[this.state.currency].code), __jsx(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, this.props.bpi[this.state.currency].rate));\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, __jsx(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, list));\n    }\n  }]);\n\n  return Prices;\n}(React.Component);\n\nexport default Prices;","map":{"version":3,"sources":["/mnt/c/code/post_class_work/bitzprice_nextjs/components/Prices.jsx"],"names":["Prices","currency","list","state","props","bpi","USD","description","code","rate","GBP","EUR","React","Component"],"mappings":";;;;;;;;;;;IAAMA,M;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;;6BAGC;AACL,UAAIC,IAAI,GAAG,EAAX;;AAEA,UAAI,KAAKC,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAmC;AAE/BC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkD,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WAArE,QACP;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAe,KAAKF,KAAL,CAAWF,QAA1B,EAAoCO,IAA3E,CADO,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAe,KAAKF,KAAL,CAAWF,QAA1B,EAAoCQ,IAA7C,CAFG,CAAP;AAIH,OAND,MAMO,IAAI,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAmC;AAEtCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkD,KAAKE,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBH,WAArE,QACP;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAe,KAAKF,KAAL,CAAWF,QAA1B,EAAoCO,IAA3E,CADO,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAe,KAAKF,KAAL,CAAWF,QAA1B,EAAoCQ,IAA7C,CAFG,CAAP;AAIH,OANM,MAMA,IAAI,KAAKN,KAAL,CAAWF,QAAX,KAAwB,KAA5B,EAAmC;AAEtCC,QAAAA,IAAI,GAAG;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAkD,KAAKE,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBJ,WAArE,QACP;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC,KAAKH,KAAL,CAAWC,GAAX,CAAe,KAAKF,KAAL,CAAWF,QAA1B,EAAoCO,IAA3E,CADO,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAS,KAAKJ,KAAL,CAAWC,GAAX,CAAe,KAAKF,KAAL,CAAWF,QAA1B,EAAoCQ,IAA7C,CAFG,CAAP;AAGH;;AAGD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,IADL,CADJ,CADJ;AAOH;;;;EAlCgBU,KAAK,CAACC,S;;AAqC3B,eAAeb,MAAf","sourcesContent":["class Prices extends React.Component {\r\n    state = {\r\n        currency: 'GBP'\r\n    }\r\n    render() {\r\n        let list = '';\r\n\r\n        if (this.state.currency === 'USD') {\r\n\r\n            list = <li className=\"list-group-item\">Bitcoin rate for {this.props.bpi.USD.description} :\r\n            <span className=\"badge badge-primary\">{this.props.bpi[this.state.currency].code}</span>\r\n                <strong>{this.props.bpi[this.state.currency].rate}</strong></li>\r\n\r\n        } else if (this.state.currency === 'GBP') {\r\n\r\n            list = <li className=\"list-group-item\">Bitcoin rate for {this.props.bpi.GBP.description} :\r\n            <span className=\"badge badge-primary\">{this.props.bpi[this.state.currency].code}</span>\r\n                <strong>{this.props.bpi[this.state.currency].rate}</strong></li>\r\n\r\n        } else if (this.state.currency === 'EUR') {\r\n\r\n            list = <li className=\"list-group-item\">Bitcoin rate for {this.props.bpi.EUR.description} :\r\n            <span className=\"badge badge-primary\">{this.props.bpi[this.state.currency].code}</span>\r\n                <strong>{this.props.bpi[this.state.currency].rate}</strong></li>\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Prices\r\n"]},"metadata":{},"sourceType":"module"}